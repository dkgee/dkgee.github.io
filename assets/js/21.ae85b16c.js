(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{467:function(s,n,a){"use strict";a.r(n);var t=a(36),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"dockerfile笔记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile笔记"}},[s._v("#")]),s._v(" Dockerfile笔记")]),s._v(" "),n("h3",{attrs:{id:"制作镜像时注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#制作镜像时注意事项"}},[s._v("#")]),s._v(" 制作镜像时注意事项")]),s._v(" "),n("ol",[n("li",[s._v("RUN一条命令能解决的事，就不要多条，不然会导致制作的镜像包变大（因为多了一层）。")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("命令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### FROM ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 制作基准镜像")]),s._v("\nFROM 镜像\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如我们要发布一个应用到tomcat里，那么的第一步就是FROM tomcat")]),s._v("\nFROM tomcat"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(":tags"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### LABEL&MAINTAINER ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MAINTAINER，一般写个人id或组织id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LABEL 就是注释，方便阅读的，纯注释说明。不会对Dockerfile造成任何影响")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如：")]),s._v("\nMAINTAINER baidu.com\nLABEL version "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),s._v("\nLABEL description "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我们是大百度！"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...等等描述性信息，纯注释。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### WORKDIR ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类似于Linux中的cd命令，但是他比cd高级的地方在于，我先cd，发现没有这个目录，我就自动创建出来，然后在cd进去")]),s._v("\nWORKDIR /usr/local/testdir\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### COPY ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将1.txt拷贝到根目录下。它不仅仅能拷贝单个文件，还支持Go语言风格的通配符，比如如下：")]),s._v("\nCOPY "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt /\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝所有 abc 开头的文件到testdir目录下")]),s._v("\nCOPY abc* /testdir/\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ? 是单个字符的占位符，比如匹配文件 abc1.log")]),s._v("\nCOPY abc?.log /testdir/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### ADD ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将1.txt拷贝到根目录的abc目录下。若/abc不存在，则会自动创建")]),s._v("\nADD "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt /abc\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将test.tar.gz解压缩然后将解压缩的内容拷贝到/home/work/test")]),s._v("\nADD test.tar.gz /home/work/test\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker官方建议当要从远程复制文件时，尽量用curl/wget命令来代替ADD。因为用ADD的时候会创建更多的镜像层。镜像层的size也大。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对比:二者都是只复制目录中的文件，而不包含目录本身。COPY能干的事ADD都能干，甚至还有附加功能。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ADD可以支持拷贝的时候顺带解压缩文件，以及添加远程文件（不在本宿主机上的文件）。只是文件拷贝的话可以用COPY，有额外操作可以用ADD代替。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### ENV ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置环境常量，方便下文引用，比如：")]),s._v("\nENV JAVA_HOME /usr/local/jdk1.8\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引用上面的常量，下面的RUN指令可以先不管啥意思，目的是想说明下文可以通过${xxx}的方式引用")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${JAVA_HOME}")]),s._v("/bin/java "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-jar")]),s._v(" xxx.jar\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ENV设置的常量，其他地方都可以用${xxx}来引用，将来改的时候只改ENV的变量内容就行")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### RUN ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行时机：RUN指令是在构建镜像时运行，在构建时能修改镜像内部的文件。命令格式不光是RUN独有，而是下面的CMD和ENTRYPOINT都通用。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SHELL命令格式")]),s._v("\nRUN yum "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# EXEC命令格式")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yum"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-y"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"install"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 二者对比，SHELL：当前shell是父进程，生成一个子shell进程去执行脚本，脚本执行完后退出子shell进程，回到当前父shell进程。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# EXEC：用EXEC进程替换当前进程，并且保持PID不变，执行完毕后直接退出，不会退回原来的进程。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总结：也就是说shell会创建子进程执行，EXEC不会创建子进程。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推荐EXEC命令格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 举个最简单的例子，构建镜像时输出一句话，那么在Dockerfile里写如下即可：")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"image is building!!!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再比如我们要下载vim，那么在Dockerfile里写如下即可：")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yum"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-y"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"install"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### CMD ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行时机：容器启动时执行，而不是镜像构建时执行。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在容器启动的时候执行此命令，且Dockerfile中只有最后一个ENTRYPOINT会被执行，推荐用EXEC格式。重点在于如果容器启动的时候")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有其他额外的附加指令，则CMD指令不生效。举例：")]),s._v("\nCMD "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container starting..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################### ENTRYPOINT ##########################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行时机：容器创建时执行，而不是镜像构建时执行。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在容器启动的时候执行此命令，且Dockerfile中只有最后一个ENTRYPOINT会被执行，推荐用EXEC格式。举例：")]),s._v("\nENTRYPOINT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ps"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-ef"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行时机演示")]),s._v("\nFROM centos\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"image building!!!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nCMD "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container starting..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" chentongwei.com/test-docker-run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像的过程中发现我们RUN的image building!!! 输出了，所以RUN命令是在镜像构建时执行。而并没有container starting…的输出。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run chentongwei.com/test-docker-run\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结果：container starting...，足以发现CMD命令是在容器启动的时候执行。")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMD和ENTRYPOINT演示")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ENTRYPOINT和CMD可以共用，若共用则他会一起合并执行。如下Demo：")]),s._v("\nFROM centos\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"image building!!!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nENTRYPOINT "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ps"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nCMD "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-ef"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" chentongwei.com/docker-run "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run chentongwei.com/docker-run\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 他给我们合并执行了：ps -ef，这么做的好处在于如果容器启动的时候添加额外指令，CMD会失效，可以理解成我们可以动态的改变CMD内容而")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不需要重新构建镜像等操作。比如")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run chentongwei.com/docker-run "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-aux")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结果直接变成了 ps -aux，CMD命令不执行了。但是ENTRYPOINT一定执行，这也是CMD和ENTRYPOINT的区别之一。")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("Redis")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将Redis运行在centos上")]),s._v("\nFROM centos\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装Redis所需要的基础库")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yum"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"install"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-y"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gcc"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gcc-c++"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"net-tools"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"make"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将Redis目录放到/usr/local")]),s._v("\nWORKDIR /usr/local\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 别忘了ADD命令自带解压缩的功能")]),s._v("\nADD redis-4.0.14.tag.gz "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nWORKDIR /usr/local/redis-4.0.14/src\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编译安装Redis")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\nWORKDIR /usr/local/redis-4.0.14\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将配置文件仍到Redis根目录")]),s._v("\nADD redis-6379.conf "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明容器中Redis的端口为6379")]),s._v("\nEXPOSE "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动Redis  redis-server redis-6379.conf")]),s._v("\nCMD "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis-server"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis-6379.conf"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("制作镜像&&启动容器")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 制作镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" chentongwei.com/docker-redis "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 chentongwei.com/docker-redis\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("p",[s._v("基础jdk1.8镜像")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("frolvlad/alpine-oraclejre8\t# 镜像内sh命令，不能执行脚本\nfunteam/jdk1.8-mini\t\t# 镜像内sh命令，\nopenjdk:8-jre-alpine\n# 制作镜像\ndocker build -f  xxx.dockerfile -t dkgee/app:v1\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例一")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('# 指明当前镜像继承的基镜像,编译当前镜像时候会自动下载基镜像\nFROM frolvlad/alpine-oraclejre8\n# 当前镜像的作者和邮箱,使用空格隔开\nMAINTAINER  dkgee dk_gee@163.com\n# 挂载目录（在宿主机可以共享访问）\nVOLUME /root\n# 从当前工作目录复制文件到镜像目录中并重新命名\nADD demo-0.0.1.jar demo.jar     \n# 在当前镜像上执行Linux命令\nRUN sh -c \'touch /demo.jar\'\n#对外暴露端口\nEXPOSE 8080\n# 让容器像一个可执行程序一样运行，entrypoint才是正统地用于定义容器启动以后的执行体\nENTRYPOINT ["java", "-jar", "demo.jar"] \n')])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例二(基于ubuntu制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('# Version: 1.0.1\nFROM ubuntu:latest\nMAINTAINER xxh "xxh@qq.com"\n#设置root用户为后续命令的执行者\nUSER root\n#执行操作\nRUN apt-get update\nRUN apt-get install -y nginx\n#使用&&拼接命令\nRUN touch test.txt && echo "abc" >> abc.txt\nEXPOSE 80 8080 1038\n#添加文件\nADD abc.txt /opt/\n#添加文件夹\nADD /webapp /opt/webapp\n#添加网络文件\nADD https://www.baidu.com/img/bd_logo1.png /opt/\n#设置环境变量\nENV WEBAPP_PORT=9090\n#设置工作目录\nWORKDIR /opt/\n#设置启动命令\nENTRYPOINT ["ls"]\n#设置启动参数\nCMD ["-a", "-l" ]\n#设置卷\nVOLUME ["/data", "/var/www"]\n#设置子镜像的触发操作\nONBUILD ADD . /app/src\nONBUILD RUN echo "on build excuted" >> onbuild.txt\n')])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例三(基于centos制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("# 表示从docker官方仓库中获取centos基础镜像\nFROM centos\n# 将当前目录下（与Dockerfile同一级目录）的jdk添加到镜像的/usr/local/中\nADD jdk-8u161-linux-x64.tar.gz  /usr/local/\nADD apache-tomcat-8.5.29.tar.gz  /usr/local/\n# 设置Java的环境变量\nENV JAVA_HOME /usr/local/jdk1.8.0_161\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nENV CATALINA_HOME /usr/local/apache-tomcat-8.5.29\nENV CATALINA_BASE /usr/local/apache-tomcat-8.5.29\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\nADD ./TRMS_HK.war /usr/local/apache-tomcat-8.5.29/webapps\n# 对外暴露的端口，便于外部访问\nEXPOSE 8080\n\n# CMD主要作用是默认的容器启动执行命令，容器启动以后，默认的执行的命令；\n# 大多数网上博客论坛说的“cmd会被覆盖”，其实为什么会覆盖？因为cmd的角色定位就是默认，如果你不额外指定，\n# 那么就执行cmd的命令，否则呢？只要你指定了，那么就不会执行cmd，也就是cmd会被覆盖\n# 一个dockerfile至多只能有一个cmd，如果有多个，只有最后一个生效。\nCMD /usr/local/apache-tomcat-8.5.29/bin/catalina.sh run\n")])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例四(基于JDK制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('FROM openjdk:8-jdk-alpine\nVOLUME /tmp\nADD kitty-monitor-1.0.0.jar app.jar\nENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]\n')])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例五(基于JDK制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("FROM java:8\nRUN mkdir -p /usr/src/myapp\nCOPY target/gs-rest-service-0.1.0.jar /usr/src/myapp/\nWORKDIR /usr/src/myapp\nEXPOSE 8080\nRUN java -jar gs-rest-service-0.1.0.jar\n")])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例六(基于JDK制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("FROM frolvlad/alpine-oraclejre8\nMAINTAINER dkgee dk_gee@163.com\nADD cms-tsp-web-1.1.3.40-bin.zip /cms-tsp-web-1.1.3.40-bin.zip\nRUN sh -c 'unzip /cms-tsp-web-1.1.3.40-bin.zip'\nEXPOSE 19090\n# CMD /cms-tsp-web-1.1.3.40/start.sh start dev\n")])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例七(基于JDK制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('FROM funteam/jdk1.8-mini\nMAINTAINER dkgee dk_gee@163.com\nADD cms-tsp-web-1.1.3.40-bin.zip /cms-tsp-web-1.1.3.40-bin.zip\nRUN sh -c \'unzip /cms-tsp-web-1.1.3.40-bin.zip\'\nEXPOSE 19090\n#【提示】start.sh脚本中不能以后台模式(nohup)运行，否则启动时会自动退出\nENTRYPOINT ["/cms-tsp-web-1.1.3.40/start.sh", "start", "dev"]\n')])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("示例八(基于Node制作)")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('# Create image based on the official Node 6 image from dockerhub\nFROM node:6-alpine\nLABEL author="Vijayendra Mudigal"\nMAINTAINER vijayendrap@gmail.com\n\n# Create a directory where our app will be placed\nRUN mkdir -p /usr/src/app\n\n# Change directory so that our commands run inside this new directory\nWORKDIR /usr/src/app\n\n# Copy dependency definitions\nCOPY package.json /usr/src/app\n\n# Install dependecies\nRUN npm install\n\n# Get all the code needed to run the app\nCOPY . /usr/src/app\n\n# Expose the port the app runs in\nEXPOSE 4200\n\n# Serve the app\nCMD ["npm", "start"]\n')])])])]),s._v(" "),n("ol",[n("li",[s._v("扩展Logstash镜像插件方式，重新编写一个Dockerfile，基于之前的镜像，使用logstash-plugin命令添加")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("FROM registry.cn-beijing.aliyuncs.com/dkgee/logstash:6.7.0\nRUN logstash-plugin "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" logstash-input-nsq\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);