(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{487:function(t,n,e){"use strict";e.r(n);var a=e(36),i=Object(a.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"linux脚本文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux脚本文件"}},[this._v("#")]),this._v(" Linux脚本文件")]),this._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[this._v("启动当前目录下.jar文件脚本")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[this._v('#! /bin/sh\n\ncd `dirname $0`\n\nCUR_SHELL_DIR=`pwd`\n\nJAR_NAME=""\nJAR_FILE=$(ls ${CUR_SHELL_DIR})\nfor fileName in ${JAR_FILE}\ndo\n\tif [[ ${fileName} == *.jar ]]; then\n\t\tJAR_NAME=${fileName}\n\tfi\ndone\n\nif [[ ${JAR_NAME} == "" ]];then\n\techo "Error: Not found jar package"\n\texit 1\nfi\n\nJAR_PATH=${CUR_SHELL_DIR}/${JAR_NAME}\nJAVA_MEM_OPTS=" -server -Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError"\nCUR_EVN="prod"\n\nfunction echo_help()\n{\n\techo -e "syntax: sh start.sh start|stop|restart|status  dev|prod|zprod"\n}\n\n## start application\nfunction appStart()\n{\n\tif [ -z $1 ];then\n\t\techo -e "Syntax: use default spring profile: prod"\n\telse\n\t   echo -e "Syntax: use spring profile: $1"\n\t   CUR_EVN="$1"\n\tfi\n\n\tSPRING_PROFILES_ACTIV="-Dspring.profiles.active=$CUR_EVN"\n\n\t# check server\n\tPIDS=`ps --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\'`\n\tif [ -n "$PIDS" ]; then\n\t\techo -e "ERROR: The $JAR_NAME already started and the PID is ${PIDS}."\n\t\texit 1\n\tfi\n\n\techo "Starting the $JAR_NAME..."\n\t# start\n\t# docker environment check\n\tdockerenv=`ls /.dockerenv`\n\tif [ -z "$dockerenv" ];then\n\t\techo "not docker environment, use nohup command to start app."\n\t\tnohup java $JAVA_MEM_OPTS -jar $SPRING_PROFILES_ACTIV $JAR_PATH >> /dev/null 2>&1 &\n\telse\n\t\techo "it\'s docker environment, use java command to start app."\n\t\tjava $JAVA_MEM_OPTS -jar $SPRING_PROFILES_ACTIV $JAR_PATH\n\tfi\n\n\tCOUNT=0\n\twhile [ $COUNT -lt 1 ]; do\n\t\tsleep 1\n\t\tCOUNT=`ps  --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\' | wc -l`\n\t\tif [ $COUNT -gt 0 ]; then\n\t\t\tbreak\n\t\tfi\n\tdone\n\tPIDS=`ps  --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\'`\n\techo "${JAR_NAME} Started and the PID is ${PIDS}."\n\techo "You can check the log file in ${LOG_PATH} for details."\n}\n\n## stop application\nfunction appStop()\n{\n\tPIDS=`ps --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\'`\n\tif [ -z "$PIDS" ]; then\n\t\techo "ERROR:The $JAR_NAME does not started!"\n\t\texit 1\n\tfi\n\n\techo -e "Stopping the $JAR_NAME..."\n\n\tfor PID in $PIDS; do\n\t\tkill $PID > /dev/null 2>&1\n\tdone\n\n\tCOUNT=0\n\twhile [ $COUNT -lt 1 ]; do\n\t\tsleep 1\n\t\tCOUNT=1\n\t\tfor PID in $PIDS ; do\n\t\t\tPID_EXIST=`ps --no-heading -p $PID`\n\t\t\tif [ -n "$PID_EXIST" ]; then\n\t\t\t\tCOUNT=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tdone\n\n\techo -e "${JAR_NAME} Stopped and the PID is ${PIDS}."\n}\n\n## look up application status\nfunction appStatus()\n{\n\tPIDS=`ps --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\'`\n\tif [ -z "$PIDS" ]; then\n\t\techo "Syntax: $JAR_NAME is stop."\n\t\texit 1\n\telse\n\t\techo "Syntax: $JAR_NAME is running, process id: $PIDS"\n\tfi\n}\n\n## restart application\nfunction appRestart()\n{\n\tPIDS=`ps --no-heading -C java -f --width 1000 | grep $JAR_NAME | awk \'{print $2}\'`\n\tif [ -z "$PIDS" ]; then\n\t\techo "Syntax:The $JAR_NAME does not started!"\n\telse\n\t\tfor PID in $PIDS; do\n\t\t\tkill $PID > /dev/null 2>&1\n\t\tdone\n\n\t\tCOUNT=0\n\t\twhile [ $COUNT -lt 1 ]; do\n\t\t\tsleep 1\n\t\t\tCOUNT=1\n\t\t\tfor PID in $PIDS ; do\n\t\t\t\tPID_EXIST=`ps --no-heading -p $PID`\n\t\t\t\tif [ -n "$PID_EXIST" ]; then\n\t\t\t\t\tCOUNT=0\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\tfi\n\n\tappStart $1\n}\n\nif [ -z $1 ];then\n\techo_help\n\texit 1\nelif [ "$1" == "start" ];then\n\tappStart $2\nelif [ "$1" == "stop" ];then\n\tappStop\nelif [ "$1" == "restart" ];then\n\tappRestart $2\nelif [ "$1" == "status" ];then\n\tappStatus $2\nelse\n\techo_help\n\texit 1\nfi\t\n')])])])])])}),[],!1,null,null,null);n.default=i.exports}}]);